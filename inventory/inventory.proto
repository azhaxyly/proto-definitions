syntax = "proto3";

package inventory;

// Задаём go_package, по которому будут генерироваться файлы для импорта в Go-проекты
option go_package = "github.com/azhaxyly/proto-definitions/inventory;inventorypb";

// Описание gRPC сервиса для Inventory
service InventoryService {
  // Получить список ресурсов
  rpc ListResources (ListResourcesRequest) returns (ListResourcesResponse);

  // Проверить доступность ресурса
  rpc CheckAvailability (CheckAvailabilityRequest) returns (CheckAvailabilityResponse);

  // Обновить статус ресурса
  rpc UpdateResourceStatus (UpdateResourceStatusRequest) returns (UpdateResourceStatusResponse);

  // (Опционально) Создать новый ресурс
  rpc CreateResource (CreateResourceRequest) returns (CreateResourceResponse);

  // (Опционально) Удалить ресурс
  rpc DeleteResource (DeleteResourceRequest) returns (DeleteResourceResponse);
}

// --------------------- Messages ---------------------

message ListResourcesRequest {
  // При необходимости можно добавить фильтры по типу ресурса, статусу и т.д.
}

message ListResourcesResponse {
  repeated Resource resources = 1;
}

message Resource {
  string resource_id = 1;
  string name = 2;
  string status = 3; // "available", "booked", "unavailable"
  string type = 4;
  string description = 5;
}

// Проверка доступности
message CheckAvailabilityRequest {
  string resource_id = 1;
}

message CheckAvailabilityResponse {
  bool is_available = 1;
}

// Обновление статуса
message UpdateResourceStatusRequest {
  string resource_id = 1;
  string new_status = 2; // "available", "booked", "unavailable"
}

message UpdateResourceStatusResponse {
  string resource_id = 1;
  string status = 2;
}

// Создание ресурса (опционально)
message CreateResourceRequest {
  string name = 1;
  string type = 2;
  string description = 3;
}

message CreateResourceResponse {
  Resource resource = 1;
}

// Удаление ресурса (опционально)
message DeleteResourceRequest {
  string resource_id = 1;
}

message DeleteResourceResponse {
  string resource_id = 1;
  bool deleted = 2;
}
